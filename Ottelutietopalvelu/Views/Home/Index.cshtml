@model Ottelutietopalvelu.Models.MatchesModel

@{
  ViewBag.Title = "Ottelutietopalvelu";
}

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "form-inline push-in", @role = "form" }))
        {
        <fieldset>
            <legend>Pelattu aikavälillä</legend>
            @{
              string startDate = Model.StartDate.HasValue ? ((DateTime)Model.StartDate).ToShortDateString() : "";
              string endDate = Model.EndDate.HasValue ? ((DateTime)Model.EndDate).ToShortDateString() : "";
            }
            <div class="form-group">
                <label for="startDate" class="control-label">Alkupäivä</label>
                <div class="input-group date datetimepicker" id="StartDatePicker">
                    <input type="text" class="form-control" name="startDate" id="startDate" value="@startDate" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>

            <div class="form-group">
                <label for="endDate" class="control-label"> Loppupäivä</label>
                <div class="input-group date datetimepicker" id="EndDatePicker">
                    <input type="text" class="form-control" name="endDate" id="endDate" value="@endDate" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Hae pelit</button>
        </fieldset>
  }
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-hover" title="Ottelutaulukko">
            <thead>
                <tr>
                    <th>Pelattu</th>
                    <th>Kotijoukkue - vierasjoukkue</th>
                    <th>Tulos</th>
                </tr>
            </thead>
            <tbody>
                @{
                  foreach (var match in Model.Matches)
                  {
                    <tr>
                        <td>@match.MatchDate</td>
                        <td>
                            <img src="@match.HomeTeam.LogoUrl" alt="HomeTeam Logo" class="logo" />
                            @{
                              if (match.HomeGoals > match.AwayGoals)
                              {
                                @Html.Raw(string.Format("<strong>{0}</strong> - ", match.HomeTeam.Name))
                                <img src="@match.AwayTeam.LogoUrl" alt="AwayTeam Logo" class="logo" />
                                @match.AwayTeam.Name
                              }
                              else if (match.HomeGoals < match.AwayGoals)
                              {
                                @Html.Raw(string.Format("{0} - ", match.HomeTeam.Name))
                                <img src="@match.AwayTeam.LogoUrl" alt="AwayTeam Logo" class="logo" />
                                @Html.Raw(string.Format(" <strong>{0}</strong>", match.AwayTeam.Name))
                              }
                              else
                              {
                                @Html.Raw(string.Format("{0} - ", match.HomeTeam.Name))
                                <img src="@match.AwayTeam.LogoUrl" alt="AwayTeam Logo" class="logo" />
                                @match.AwayTeam.Name
                              }
                            }
                        </td>
                        <td>
                            @{
                              if (match.HomeGoals > match.AwayGoals)
                              {
                                @Html.Raw(string.Format("<strong>{0}</strong> - {1}", match.HomeGoals, match.AwayGoals))
                              }
                              else if (match.HomeGoals < match.AwayGoals)
                              {
                                @Html.Raw(string.Format("{0} - <strong>{1}</strong>", match.HomeGoals, match.AwayGoals))
                              }
                              else
                              {
                                @Html.Raw(string.Format("{0} - {1}", match.HomeGoals, match.AwayGoals))
                              }
                            }
                        </td>
                    </tr>
                  }
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('.datetimepicker').datetimepicker({
                format: 'L',
                locale: 'fi'
            });

            $("#StartDatePicker").on("dp.change", function (e) {
                $('#EndDatePicker').data("DateTimePicker").minDate(e.date);
            });

            $("#EndDatePicker").on("dp.change", function (e) {
                $('#StartDatePicker').data("DateTimePicker").maxDate(e.date);
            });
        });
    </script>
}